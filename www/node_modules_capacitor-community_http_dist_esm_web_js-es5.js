(function () {
  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

  function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

  function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

  function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

  function _possibleConstructorReturn(self, call) { if (call && (typeof call === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }

  function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

  function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

  function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

  function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

  function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }

  function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

  function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

  function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

  function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

  function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e2) { throw _e2; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e3) { didErr = true; err = _e3; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }

  function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

  function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

  (self["webpackChunkbookApp_2"] = self["webpackChunkbookApp_2"] || []).push([["node_modules_capacitor-community_http_dist_esm_web_js"], {
    /***/
    78627:
    /*!*******************************************************************!*\
      !*** ./node_modules/@capacitor-community/http/dist/esm/cookie.js ***!
      \*******************************************************************/

    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export */


      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */
        "setCookie": function setCookie() {
          return (
            /* binding */
            _setCookie
          );
        },

        /* harmony export */
        "getCookies": function getCookies() {
          return (
            /* binding */
            _getCookies
          );
        },

        /* harmony export */
        "getCookie": function getCookie() {
          return (
            /* binding */
            _getCookie
          );
        },

        /* harmony export */
        "deleteCookie": function deleteCookie() {
          return (
            /* binding */
            _deleteCookie
          );
        },

        /* harmony export */
        "clearCookies": function clearCookies() {
          return (
            /* binding */
            _clearCookies
          );
        }
        /* harmony export */

      });
      /* harmony import */


      var _utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ./utils */
      73698);
      /**
       * Set a cookie
       * @param key The key to set
       * @param value The value to set
       * @param options Optional additional parameters
       */


      var _setCookie = function _setCookie(key, value) {
        var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
        // Safely Encoded Key/Value
        var encodedKey = (0, _utils__WEBPACK_IMPORTED_MODULE_0__.encode)(key);
        var encodedValue = (0, _utils__WEBPACK_IMPORTED_MODULE_0__.encode)(value); // Clean & sanitize options

        var expires = "; expires=".concat((options.expires || '').replace('expires=', '')); // Default is "; expires="

        var path = (options.path || '/').replace('path=', ''); // Default is "path=/"

        document.cookie = "".concat(encodedKey, "=").concat(encodedValue || '').concat(expires, "; path=").concat(path);
      };
      /**
       * Gets all HttpCookies
       */


      var _getCookies = function _getCookies() {
        var output = [];
        var map = {};

        if (!document.cookie) {
          return output;
        }

        var cookies = document.cookie.split(';') || [];

        var _iterator = _createForOfIteratorHelper(cookies),
            _step;

        try {
          for (_iterator.s(); !(_step = _iterator.n()).done;) {
            var cookie = _step.value;

            // Replace first "=" with CAP_COOKIE to prevent splitting on additional "="
            var _cookie$replace$split = cookie.replace(/=/, 'CAP_COOKIE').split('CAP_COOKIE'),
                _cookie$replace$split2 = _slicedToArray(_cookie$replace$split, 2),
                k = _cookie$replace$split2[0],
                v = _cookie$replace$split2[1];

            k = (0, _utils__WEBPACK_IMPORTED_MODULE_0__.decode)(k).trim();
            v = (0, _utils__WEBPACK_IMPORTED_MODULE_0__.decode)(v).trim();
            map[k] = v;
          }
        } catch (err) {
          _iterator.e(err);
        } finally {
          _iterator.f();
        }

        var entries = Object.entries(map);

        for (var _i = 0, _entries = entries; _i < _entries.length; _i++) {
          var _entries$_i = _slicedToArray(_entries[_i], 2),
              key = _entries$_i[0],
              value = _entries$_i[1];

          output.push({
            key: key,
            value: value
          });
        }

        return output;
      };
      /**
       * Gets a single HttpCookie given a key
       */


      var _getCookie = function _getCookie(key) {
        var cookies = _getCookies();

        var _iterator2 = _createForOfIteratorHelper(cookies),
            _step2;

        try {
          for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
            var cookie = _step2.value;

            if (cookie.key === key) {
              return cookie;
            }
          }
        } catch (err) {
          _iterator2.e(err);
        } finally {
          _iterator2.f();
        }

        return {
          key: key,
          value: ''
        };
      };
      /**
       * Deletes a cookie given a key
       * @param key The key of the cookie to delete
       */


      var _deleteCookie = function _deleteCookie(key) {
        document.cookie = "".concat(key, "=; Max-Age=0");
      };
      /**
       * Clears out cookies by setting them to expire immediately
       */


      var _clearCookies = function _clearCookies() {
        var cookies = document.cookie.split(';') || [];

        var _iterator3 = _createForOfIteratorHelper(cookies),
            _step3;

        try {
          for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {
            var cookie = _step3.value;
            document.cookie = cookie.replace(/^ +/, '').replace(/=.*/, "=;expires=".concat(new Date().toUTCString(), ";path=/"));
          }
        } catch (err) {
          _iterator3.e(err);
        } finally {
          _iterator3.f();
        }
      }; //# sourceMappingURL=cookie.js.map

      /***/

    },

    /***/
    8470:
    /*!********************************************************************!*\
      !*** ./node_modules/@capacitor-community/http/dist/esm/request.js ***!
      \********************************************************************/

    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export */


      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */
        "buildRequestInit": function buildRequestInit() {
          return (
            /* binding */
            _buildRequestInit
          );
        },

        /* harmony export */
        "request": function request() {
          return (
            /* binding */
            _request
          );
        },

        /* harmony export */
        "get": function get() {
          return (
            /* binding */
            _get
          );
        },

        /* harmony export */
        "post": function post() {
          return (
            /* binding */
            _post
          );
        },

        /* harmony export */
        "put": function put() {
          return (
            /* binding */
            _put
          );
        },

        /* harmony export */
        "patch": function patch() {
          return (
            /* binding */
            _patch
          );
        },

        /* harmony export */
        "del": function del() {
          return (
            /* binding */
            _del
          );
        }
        /* harmony export */

      });
      /* harmony import */


      var _utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ./utils */
      73698);
      /**
       * Normalize an HttpHeaders map by lowercasing all of the values
       * @param headers The HttpHeaders object to normalize
       */


      var normalizeHttpHeaders = function normalizeHttpHeaders() {
        var headers = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
        var originalKeys = Object.keys(headers);
        var loweredKeys = Object.keys(headers).map(function (k) {
          return k.toLocaleLowerCase();
        });
        var normalized = loweredKeys.reduce(function (acc, key, index) {
          acc[key] = headers[originalKeys[index]];
          return acc;
        }, {});
        return normalized;
      };
      /**
       * Builds a string of url parameters that
       * @param params A map of url parameters
       * @param shouldEncode true if you should encodeURIComponent() the values (true by default)
       */


      var buildUrlParams = function buildUrlParams(params) {
        var shouldEncode = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;
        if (!params) return null;
        var output = Object.entries(params).reduce(function (accumulator, entry) {
          var _entry = _slicedToArray(entry, 2),
              key = _entry[0],
              value = _entry[1];

          var encodedValue;
          var item;

          if (Array.isArray(value)) {
            item = '';
            value.forEach(function (str) {
              encodedValue = shouldEncode ? encodeURIComponent(str) : str;
              item += "".concat(key, "=").concat(encodedValue, "&");
            }); // last character will always be "&" so slice it off

            item.slice(0, -1);
          } else {
            encodedValue = shouldEncode ? encodeURIComponent(value) : value;
            item = "".concat(key, "=").concat(encodedValue);
          }

          return "".concat(accumulator, "&").concat(item);
        }, ''); // Remove initial "&" from the reduce

        return output.substr(1);
      };
      /**
       * Build the RequestInit object based on the options passed into the initial request
       * @param options The Http plugin options
       * @param extra Any extra RequestInit values
       */


      var _buildRequestInit = function _buildRequestInit(options) {
        var extra = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
        var output = Object.assign({
          method: options.method || 'GET',
          headers: options.headers
        }, extra); // Get the content-type

        var headers = normalizeHttpHeaders(options.headers);
        var type = headers['content-type'] || ''; // Build request initializers based off of content-type

        if (type.includes('application/x-www-form-urlencoded')) {
          var params = new URLSearchParams();

          for (var _i2 = 0, _Object$entries = Object.entries(options.data || {}); _i2 < _Object$entries.length; _i2++) {
            var _Object$entries$_i = _slicedToArray(_Object$entries[_i2], 2),
                key = _Object$entries$_i[0],
                value = _Object$entries$_i[1];

            params.set(key, value);
          }

          output.body = params.toString();
        } else if (type.includes('multipart/form-data')) {
          var form = new FormData();

          if (options.data instanceof FormData) {
            options.data.forEach(function (value, key) {
              form.append(key, value);
            });
          } else {
            for (var _i3 = 0, _Object$keys = Object.keys(options.data); _i3 < _Object$keys.length; _i3++) {
              var _key = _Object$keys[_i3];
              form.append(_key, options.data[_key]);
            }
          }

          output.body = form;

          var _headers = new Headers(output.headers);

          _headers["delete"]('content-type'); // content-type will be set by `window.fetch` to includy boundary


          output.headers = _headers;
        } else if (type.includes('application/json') || typeof options.data === 'object') {
          output.body = JSON.stringify(options.data);
        }

        return output;
      };
      /**
       * Perform an Http request given a set of options
       * @param options Options to build the HTTP request
       */


      var _request = /*#__PURE__*/function () {
        var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(options) {
          var requestInit, urlParams, url, response, contentType, _ref2, _ref2$responseType, responseType, data, blob, headers;

          return regeneratorRuntime.wrap(function _callee$(_context) {
            while (1) {
              switch (_context.prev = _context.next) {
                case 0:
                  requestInit = _buildRequestInit(options, options.webFetchExtra);
                  urlParams = buildUrlParams(options.params, options.shouldEncodeUrlParams);
                  url = urlParams ? "".concat(options.url, "?").concat(urlParams) : options.url;
                  _context.next = 5;
                  return fetch(url, requestInit);

                case 5:
                  response = _context.sent;
                  contentType = response.headers.get('content-type') || ''; // Default to 'text' responseType so no parsing happens

                  _ref2 = response.ok ? options : {}, _ref2$responseType = _ref2.responseType, responseType = _ref2$responseType === void 0 ? 'text' : _ref2$responseType; // If the response content-type is json, force the response to be json

                  if (contentType.includes('application/json')) {
                    responseType = 'json';
                  }

                  _context.t0 = responseType;
                  _context.next = _context.t0 === 'arraybuffer' ? 12 : _context.t0 === 'blob' ? 12 : _context.t0 === 'json' ? 19 : _context.t0 === 'document' ? 23 : _context.t0 === 'text' ? 23 : 23;
                  break;

                case 12:
                  _context.next = 14;
                  return response.blob();

                case 14:
                  blob = _context.sent;
                  _context.next = 17;
                  return (0, _utils__WEBPACK_IMPORTED_MODULE_0__.readBlobAsBase64)(blob);

                case 17:
                  data = _context.sent;
                  return _context.abrupt("break", 26);

                case 19:
                  _context.next = 21;
                  return response.json();

                case 21:
                  data = _context.sent;
                  return _context.abrupt("break", 26);

                case 23:
                  _context.next = 25;
                  return response.text();

                case 25:
                  data = _context.sent;

                case 26:
                  // Convert fetch headers to Capacitor HttpHeaders
                  headers = {};
                  response.headers.forEach(function (value, key) {
                    headers[key] = value;
                  });
                  return _context.abrupt("return", {
                    data: data,
                    headers: headers,
                    status: response.status,
                    url: response.url
                  });

                case 29:
                case "end":
                  return _context.stop();
              }
            }
          }, _callee);
        }));

        return function _request(_x) {
          return _ref.apply(this, arguments);
        };
      }();
      /**
       * Perform an Http GET request given a set of options
       * @param options Options to build the HTTP request
       */


      var _get = /*#__PURE__*/function () {
        var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(options) {
          return regeneratorRuntime.wrap(function _callee2$(_context2) {
            while (1) {
              switch (_context2.prev = _context2.next) {
                case 0:
                  return _context2.abrupt("return", _request(Object.assign(Object.assign({}, options), {
                    method: 'GET'
                  })));

                case 1:
                case "end":
                  return _context2.stop();
              }
            }
          }, _callee2);
        }));

        return function _get(_x2) {
          return _ref3.apply(this, arguments);
        };
      }();
      /**
       * Perform an Http POST request given a set of options
       * @param options Options to build the HTTP request
       */


      var _post = /*#__PURE__*/function () {
        var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(options) {
          return regeneratorRuntime.wrap(function _callee3$(_context3) {
            while (1) {
              switch (_context3.prev = _context3.next) {
                case 0:
                  return _context3.abrupt("return", _request(Object.assign(Object.assign({}, options), {
                    method: 'POST'
                  })));

                case 1:
                case "end":
                  return _context3.stop();
              }
            }
          }, _callee3);
        }));

        return function _post(_x3) {
          return _ref4.apply(this, arguments);
        };
      }();
      /**
       * Perform an Http PUT request given a set of options
       * @param options Options to build the HTTP request
       */


      var _put = /*#__PURE__*/function () {
        var _ref5 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(options) {
          return regeneratorRuntime.wrap(function _callee4$(_context4) {
            while (1) {
              switch (_context4.prev = _context4.next) {
                case 0:
                  return _context4.abrupt("return", _request(Object.assign(Object.assign({}, options), {
                    method: 'PUT'
                  })));

                case 1:
                case "end":
                  return _context4.stop();
              }
            }
          }, _callee4);
        }));

        return function _put(_x4) {
          return _ref5.apply(this, arguments);
        };
      }();
      /**
       * Perform an Http PATCH request given a set of options
       * @param options Options to build the HTTP request
       */


      var _patch = /*#__PURE__*/function () {
        var _ref6 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(options) {
          return regeneratorRuntime.wrap(function _callee5$(_context5) {
            while (1) {
              switch (_context5.prev = _context5.next) {
                case 0:
                  return _context5.abrupt("return", _request(Object.assign(Object.assign({}, options), {
                    method: 'PATCH'
                  })));

                case 1:
                case "end":
                  return _context5.stop();
              }
            }
          }, _callee5);
        }));

        return function _patch(_x5) {
          return _ref6.apply(this, arguments);
        };
      }();
      /**
       * Perform an Http DELETE request given a set of options
       * @param options Options to build the HTTP request
       */


      var _del = /*#__PURE__*/function () {
        var _ref7 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(options) {
          return regeneratorRuntime.wrap(function _callee6$(_context6) {
            while (1) {
              switch (_context6.prev = _context6.next) {
                case 0:
                  return _context6.abrupt("return", _request(Object.assign(Object.assign({}, options), {
                    method: 'DELETE'
                  })));

                case 1:
                case "end":
                  return _context6.stop();
              }
            }
          }, _callee6);
        }));

        return function _del(_x6) {
          return _ref7.apply(this, arguments);
        };
      }(); //# sourceMappingURL=request.js.map

      /***/

    },

    /***/
    73698:
    /*!******************************************************************!*\
      !*** ./node_modules/@capacitor-community/http/dist/esm/utils.js ***!
      \******************************************************************/

    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export */


      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */
        "readBlobAsBase64": function readBlobAsBase64() {
          return (
            /* binding */
            _readBlobAsBase
          );
        },

        /* harmony export */
        "encode": function encode() {
          return (
            /* binding */
            _encode
          );
        },

        /* harmony export */
        "decode": function decode() {
          return (
            /* binding */
            _decode
          );
        }
        /* harmony export */

      });
      /**
       * Read in a Blob value and return it as a base64 string
       * @param blob The blob value to convert to a base64 string
       */


      var _readBlobAsBase = /*#__PURE__*/function () {
        var _ref8 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7(blob) {
          return regeneratorRuntime.wrap(function _callee7$(_context7) {
            while (1) {
              switch (_context7.prev = _context7.next) {
                case 0:
                  return _context7.abrupt("return", new Promise(function (resolve, reject) {
                    var reader = new FileReader();

                    reader.onload = function () {
                      var base64String = reader.result;
                      var base64StringWithoutTags = base64String.substr(base64String.indexOf(',') + 1); // remove prefix "data:application/pdf;base64,"

                      // remove prefix "data:application/pdf;base64,"
                      resolve(base64StringWithoutTags);
                    };

                    reader.onerror = function (error) {
                      return reject(error);
                    };

                    reader.readAsDataURL(blob);
                  }));

                case 1:
                case "end":
                  return _context7.stop();
              }
            }
          }, _callee7);
        }));

        return function _readBlobAsBase(_x7) {
          return _ref8.apply(this, arguments);
        };
      }();
      /**
       * Safely web encode a string value (inspired by js-cookie)
       * @param str The string value to encode
       */


      var _encode = function _encode(str) {
        return encodeURIComponent(str).replace(/%(2[346B]|5E|60|7C)/g, decodeURIComponent).replace(/[()]/g, escape);
      };
      /**
       * Safely web decode a string value (inspired by js-cookie)
       * @param str The string value to decode
       */


      var _decode = function _decode(str) {
        return str.replace(/(%[\dA-F]{2})+/gi, decodeURIComponent);
      }; //# sourceMappingURL=utils.js.map

      /***/

    },

    /***/
    27142:
    /*!****************************************************************!*\
      !*** ./node_modules/@capacitor-community/http/dist/esm/web.js ***!
      \****************************************************************/

    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export */


      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */
        "HttpWeb": function HttpWeb() {
          return (
            /* binding */
            _HttpWeb
          );
        }
        /* harmony export */

      });
      /* harmony import */


      var _capacitor_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! @capacitor/core */
      68384);
      /* harmony import */


      var _cookie__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ./cookie */
      78627);
      /* harmony import */


      var _request__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! ./request */
      8470);

      var _HttpWeb = /*#__PURE__*/function (_capacitor_core__WEBP) {
        _inherits(_HttpWeb, _capacitor_core__WEBP);

        var _super = _createSuper(_HttpWeb);

        function _HttpWeb() {
          var _this;

          _classCallCheck(this, _HttpWeb);

          _this = _super.call(this);
          /**
           * Perform an Http request given a set of options
           * @param options Options to build the HTTP request
           */

          _this.request = /*#__PURE__*/function () {
            var _ref9 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8(options) {
              return regeneratorRuntime.wrap(function _callee8$(_context8) {
                while (1) {
                  switch (_context8.prev = _context8.next) {
                    case 0:
                      return _context8.abrupt("return", _request__WEBPACK_IMPORTED_MODULE_2__.request(options));

                    case 1:
                    case "end":
                      return _context8.stop();
                  }
                }
              }, _callee8);
            }));

            return function (_x8) {
              return _ref9.apply(this, arguments);
            };
          }();
          /**
           * Perform an Http GET request given a set of options
           * @param options Options to build the HTTP request
           */


          _this.get = /*#__PURE__*/function () {
            var _ref10 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee9(options) {
              return regeneratorRuntime.wrap(function _callee9$(_context9) {
                while (1) {
                  switch (_context9.prev = _context9.next) {
                    case 0:
                      return _context9.abrupt("return", _request__WEBPACK_IMPORTED_MODULE_2__.get(options));

                    case 1:
                    case "end":
                      return _context9.stop();
                  }
                }
              }, _callee9);
            }));

            return function (_x9) {
              return _ref10.apply(this, arguments);
            };
          }();
          /**
           * Perform an Http POST request given a set of options
           * @param options Options to build the HTTP request
           */


          _this.post = /*#__PURE__*/function () {
            var _ref11 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee10(options) {
              return regeneratorRuntime.wrap(function _callee10$(_context10) {
                while (1) {
                  switch (_context10.prev = _context10.next) {
                    case 0:
                      return _context10.abrupt("return", _request__WEBPACK_IMPORTED_MODULE_2__.post(options));

                    case 1:
                    case "end":
                      return _context10.stop();
                  }
                }
              }, _callee10);
            }));

            return function (_x10) {
              return _ref11.apply(this, arguments);
            };
          }();
          /**
           * Perform an Http PUT request given a set of options
           * @param options Options to build the HTTP request
           */


          _this.put = /*#__PURE__*/function () {
            var _ref12 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee11(options) {
              return regeneratorRuntime.wrap(function _callee11$(_context11) {
                while (1) {
                  switch (_context11.prev = _context11.next) {
                    case 0:
                      return _context11.abrupt("return", _request__WEBPACK_IMPORTED_MODULE_2__.put(options));

                    case 1:
                    case "end":
                      return _context11.stop();
                  }
                }
              }, _callee11);
            }));

            return function (_x11) {
              return _ref12.apply(this, arguments);
            };
          }();
          /**
           * Perform an Http PATCH request given a set of options
           * @param options Options to build the HTTP request
           */


          _this.patch = /*#__PURE__*/function () {
            var _ref13 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee12(options) {
              return regeneratorRuntime.wrap(function _callee12$(_context12) {
                while (1) {
                  switch (_context12.prev = _context12.next) {
                    case 0:
                      return _context12.abrupt("return", _request__WEBPACK_IMPORTED_MODULE_2__.patch(options));

                    case 1:
                    case "end":
                      return _context12.stop();
                  }
                }
              }, _callee12);
            }));

            return function (_x12) {
              return _ref13.apply(this, arguments);
            };
          }();
          /**
           * Perform an Http DELETE request given a set of options
           * @param options Options to build the HTTP request
           */


          _this.del = /*#__PURE__*/function () {
            var _ref14 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee13(options) {
              return regeneratorRuntime.wrap(function _callee13$(_context13) {
                while (1) {
                  switch (_context13.prev = _context13.next) {
                    case 0:
                      return _context13.abrupt("return", _request__WEBPACK_IMPORTED_MODULE_2__.del(options));

                    case 1:
                    case "end":
                      return _context13.stop();
                  }
                }
              }, _callee13);
            }));

            return function (_x13) {
              return _ref14.apply(this, arguments);
            };
          }();
          /**
           * Gets all HttpCookies as a Map
           */


          _this.getCookiesMap = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee14() {
            var cookies, output, _iterator4, _step4, cookie;

            return regeneratorRuntime.wrap(function _callee14$(_context14) {
              while (1) {
                switch (_context14.prev = _context14.next) {
                  case 0:
                    cookies = _cookie__WEBPACK_IMPORTED_MODULE_1__.getCookies();
                    output = {};
                    _iterator4 = _createForOfIteratorHelper(cookies);

                    try {
                      for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {
                        cookie = _step4.value;
                        output[cookie.key] = cookie.value;
                      }
                    } catch (err) {
                      _iterator4.e(err);
                    } finally {
                      _iterator4.f();
                    }

                    return _context14.abrupt("return", output);

                  case 5:
                  case "end":
                    return _context14.stop();
                }
              }
            }, _callee14);
          }));
          /**
           * Get all HttpCookies as an object with the values as an HttpCookie[]
           */

          _this.getCookies = /*#__PURE__*/function () {
            var _ref16 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee15(options) {
              var url, cookies;
              return regeneratorRuntime.wrap(function _callee15$(_context15) {
                while (1) {
                  switch (_context15.prev = _context15.next) {
                    case 0:
                      // @ts-ignore
                      url = options.url;
                      cookies = _cookie__WEBPACK_IMPORTED_MODULE_1__.getCookies();
                      return _context15.abrupt("return", {
                        cookies: cookies
                      });

                    case 3:
                    case "end":
                      return _context15.stop();
                  }
                }
              }, _callee15);
            }));

            return function (_x14) {
              return _ref16.apply(this, arguments);
            };
          }();
          /**
           * Set a cookie
           * @param key The key to set
           * @param value The value to set
           * @param options Optional additional parameters
           */


          _this.setCookie = /*#__PURE__*/function () {
            var _ref17 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee16(options) {
              var key, value, _options$expires, expires, _options$path, path;

              return regeneratorRuntime.wrap(function _callee16$(_context16) {
                while (1) {
                  switch (_context16.prev = _context16.next) {
                    case 0:
                      key = options.key, value = options.value, _options$expires = options.expires, expires = _options$expires === void 0 ? '' : _options$expires, _options$path = options.path, path = _options$path === void 0 ? '' : _options$path;

                      _cookie__WEBPACK_IMPORTED_MODULE_1__.setCookie(key, value, {
                        expires: expires,
                        path: path
                      });

                    case 2:
                    case "end":
                      return _context16.stop();
                  }
                }
              }, _callee16);
            }));

            return function (_x15) {
              return _ref17.apply(this, arguments);
            };
          }();
          /**
           * Gets all cookie values unless a key is specified, then return only that value
           * @param key The key of the cookie value to get
           */


          _this.getCookie = /*#__PURE__*/function () {
            var _ref18 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee17(options) {
              return regeneratorRuntime.wrap(function _callee17$(_context17) {
                while (1) {
                  switch (_context17.prev = _context17.next) {
                    case 0:
                      return _context17.abrupt("return", _cookie__WEBPACK_IMPORTED_MODULE_1__.getCookie(options.key));

                    case 1:
                    case "end":
                      return _context17.stop();
                  }
                }
              }, _callee17);
            }));

            return function (_x16) {
              return _ref18.apply(this, arguments);
            };
          }();
          /**
           * Deletes a cookie given a key
           * @param key The key of the cookie to delete
           */


          _this.deleteCookie = /*#__PURE__*/function () {
            var _ref19 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee18(options) {
              return regeneratorRuntime.wrap(function _callee18$(_context18) {
                while (1) {
                  switch (_context18.prev = _context18.next) {
                    case 0:
                      return _context18.abrupt("return", _cookie__WEBPACK_IMPORTED_MODULE_1__.deleteCookie(options.key));

                    case 1:
                    case "end":
                      return _context18.stop();
                  }
                }
              }, _callee18);
            }));

            return function (_x17) {
              return _ref19.apply(this, arguments);
            };
          }();
          /**
           * Clears out cookies by setting them to expire immediately
           */


          _this.clearCookies = /*#__PURE__*/function () {
            var _ref20 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee19( // @ts-ignore
            options) {
              return regeneratorRuntime.wrap(function _callee19$(_context19) {
                while (1) {
                  switch (_context19.prev = _context19.next) {
                    case 0:
                      return _context19.abrupt("return", _cookie__WEBPACK_IMPORTED_MODULE_1__.clearCookies());

                    case 1:
                    case "end":
                      return _context19.stop();
                  }
                }
              }, _callee19);
            }));

            return function (_x18) {
              return _ref20.apply(this, arguments);
            };
          }();
          /**
           * Uploads a file through a POST request
           * @param options TODO
           */


          _this.uploadFile = /*#__PURE__*/function () {
            var _ref21 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee20(options) {
              var formData, fetchOptions;
              return regeneratorRuntime.wrap(function _callee20$(_context20) {
                while (1) {
                  switch (_context20.prev = _context20.next) {
                    case 0:
                      formData = new FormData();
                      formData.append(options.name, options.blob || 'undefined');
                      fetchOptions = Object.assign(Object.assign({}, options), {
                        body: formData,
                        method: 'POST'
                      });
                      return _context20.abrupt("return", _this.post(fetchOptions));

                    case 4:
                    case "end":
                      return _context20.stop();
                  }
                }
              }, _callee20);
            }));

            return function (_x19) {
              return _ref21.apply(this, arguments);
            };
          }();
          /**
           * Downloads a file
           * @param options TODO
           */


          _this.downloadFile = /*#__PURE__*/function () {
            var _ref22 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee21(options) {
              var requestInit, response, blob, reader, bytes, chunks, contentType, contentLength, _yield$reader$read, done, value, status, allChunks, position, _i4, _chunks, chunk;

              return regeneratorRuntime.wrap(function _callee21$(_context21) {
                while (1) {
                  switch (_context21.prev = _context21.next) {
                    case 0:
                      requestInit = _request__WEBPACK_IMPORTED_MODULE_2__.buildRequestInit(options, options.webFetchExtra);
                      _context21.next = 3;
                      return fetch(options.url, requestInit);

                    case 3:
                      response = _context21.sent;

                      if (options === null || options === void 0 ? void 0 : options.progress) {
                        _context21.next = 10;
                        break;
                      }

                      _context21.next = 7;
                      return response.blob();

                    case 7:
                      blob = _context21.sent;
                      _context21.next = 46;
                      break;

                    case 10:
                      if (response === null || response === void 0 ? void 0 : response.body) {
                        _context21.next = 14;
                        break;
                      }

                      blob = new Blob();
                      _context21.next = 46;
                      break;

                    case 14:
                      reader = response.body.getReader();
                      bytes = 0;
                      chunks = [];
                      contentType = response.headers.get('content-type');
                      contentLength = parseInt(response.headers.get('content-length') || '0', 10);

                    case 19:
                      if (!true) {
                        _context21.next = 33;
                        break;
                      }

                      _context21.next = 22;
                      return reader.read();

                    case 22:
                      _yield$reader$read = _context21.sent;
                      done = _yield$reader$read.done;
                      value = _yield$reader$read.value;

                      if (!done) {
                        _context21.next = 27;
                        break;
                      }

                      return _context21.abrupt("break", 33);

                    case 27:
                      chunks.push(value);
                      bytes += (value === null || value === void 0 ? void 0 : value.length) || 0;
                      status = {
                        type: 'DOWNLOAD',
                        url: options.url,
                        bytes: bytes,
                        contentLength: contentLength
                      };

                      _this.notifyListeners('progress', status);

                      _context21.next = 19;
                      break;

                    case 33:
                      allChunks = new Uint8Array(bytes);
                      position = 0;
                      _i4 = 0, _chunks = chunks;

                    case 36:
                      if (!(_i4 < _chunks.length)) {
                        _context21.next = 45;
                        break;
                      }

                      chunk = _chunks[_i4];

                      if (!(typeof chunk === 'undefined')) {
                        _context21.next = 40;
                        break;
                      }

                      return _context21.abrupt("continue", 42);

                    case 40:
                      allChunks.set(chunk, position);
                      position += chunk.length;

                    case 42:
                      _i4++;
                      _context21.next = 36;
                      break;

                    case 45:
                      blob = new Blob([allChunks.buffer], {
                        type: contentType || undefined
                      });

                    case 46:
                      return _context21.abrupt("return", {
                        blob: blob
                      });

                    case 47:
                    case "end":
                      return _context21.stop();
                  }
                }
              }, _callee21);
            }));

            return function (_x20) {
              return _ref22.apply(this, arguments);
            };
          }();

          return _this;
        }

        return _HttpWeb;
      }(_capacitor_core__WEBPACK_IMPORTED_MODULE_0__.WebPlugin); //# sourceMappingURL=web.js.map

      /***/

    }
  }]);
})();
//# sourceMappingURL=node_modules_capacitor-community_http_dist_esm_web_js-es5.js.map